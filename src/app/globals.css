@import "tailwindcss";

/* Make Tailwind `dark:` variant respond to html.dark or html[data-theme="dark"] */
@custom-variant dark (:where(.dark, [data-theme="dark"]) &);

:root {
  --background: #ffffff;
  --foreground: #171717;
  color-scheme: light;
}

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
}

/* System preference fallback (only when no explicit data-theme is set) */
@media (prefers-color-scheme: dark) {
  html:not([data-theme]) {
    --background: #0a0a0a;
    --foreground: #ededed;
  }
}

/* Explicit theme control */
html[data-theme="light"] {
  --background: #ffffff;
  --foreground: #171717;
}

html[data-theme="dark"] {
  --background: #0a0a0a;
  --foreground: #ffffff; /* maximum contrast text in dark mode */
  color-scheme: dark;
}

/* Global dark overrides for common Tailwind utilities used in components */
.dark .bg-white { background-color: #111827 !important; }
.dark .bg-gray-50 { background-color: #0b0b0b !important; }
.dark .bg-blue-50 { background-color: #1f2937 !important; }
.dark .bg-blue-100 { background-color: #1f2937 !important; }
.dark .border-gray-200 { border-color: #1f2937 !important; }
.dark .bg-gray-100 { background-color: #1f2937 !important; }
/* Make gray text utilities brighter in dark mode for better readability */
.dark .text-gray-900 { color: #ffffff !important; }
.dark .text-gray-800 { color: #ffffff !important; }
.dark .text-gray-700 { color: #f3f4f6 !important; }
.dark .text-gray-600 { color: #e5e7eb !important; }

/* Enforce bright text for common text elements in dark mode */
.dark :where(p, li, ol, ul, span, div, a, small, blockquote, h1, h2, h3, h4, h5, h6) {
  color: var(--foreground) !important;
}

body {
  background: var(--background);
  color: var(--foreground);
  font-family: Arial, Helvetica, sans-serif;
}

html {
  scroll-behavior: smooth;
}

section[id] {
  scroll-margin-top: 6rem;
}

/* ===== Reveal Animations ===== */
.reveal-init {
  opacity: 0;
  transform: translateY(16px);
}

.reveal-in {
  opacity: 1;
  transform: translateY(0);
}

.reveal-fade-up {
  transition: opacity 600ms ease, transform 600ms ease;
}

.reveal-fade {
  transition: opacity 600ms ease;
}

.reveal-scale {
  transform-origin: center;
  transition: opacity 600ms ease, transform 600ms ease;
}

.reveal-zoom-in.reveal-init {
  transform: scale(0.96);
}

.reveal-zoom-in.reveal-in {
  transform: scale(1);
}

.reveal-stagger > * {
  opacity: 0;
  transform: translateY(14px);
}

.reveal-in .reveal-stagger > *,
.reveal-stagger.reveal-in > * {
  opacity: 1;
  transform: translateY(0);
}

.reveal-in .reveal-stagger > *:nth-child(1), .reveal-stagger.reveal-in > *:nth-child(1) { transition: opacity 500ms ease 50ms, transform 500ms ease 50ms; }
.reveal-in .reveal-stagger > *:nth-child(2), .reveal-stagger.reveal-in > *:nth-child(2) { transition: opacity 500ms ease 120ms, transform 500ms ease 120ms; }
.reveal-in .reveal-stagger > *:nth-child(3), .reveal-stagger.reveal-in > *:nth-child(3) { transition: opacity 500ms ease 190ms, transform 500ms ease 190ms; }
.reveal-in .reveal-stagger > *:nth-child(4), .reveal-stagger.reveal-in > *:nth-child(4) { transition: opacity 500ms ease 260ms, transform 500ms ease 260ms; }
.reveal-in .reveal-stagger > *:nth-child(5), .reveal-stagger.reveal-in > *:nth-child(5) { transition: opacity 500ms ease 330ms, transform 500ms ease 330ms; }
.reveal-in .reveal-stagger > *:nth-child(6), .reveal-stagger.reveal-in > *:nth-child(6) { transition: opacity 500ms ease 400ms, transform 500ms ease 400ms; }
